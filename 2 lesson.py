# 1. Выяснить тип результата выражений:
print(type(15*3))
print(type(15/3))
print(type(15//3))
print(type(15**2))

# 2. Дан список:
# ['в', '5', 'часов', '17', 'минут', 'температура', 'воздуха', 'была', '+5', 'градусов']
# Необходимо его обработать — обособить каждое целое число (вещественные не трогаем) кавычками
# (добавить кавычку до и кавычку после элемента списка, являющегося числом)
# и дополнить нулём до двух целочисленных разрядов

my_list = ['в ', '5', ' часов ', '17', ' минут ', 'температура ', 'воздуха ', 'была ', '+5', ' градусов']
# print(my_list.index('+5'))
cut_list = my_list[8]
cut_list = my_list[8].split('+', 1)
# print(cut_list)
plus = '+'
quotes = '"'
plus5 = plus + cut_list[1]
# print(plus5)
quotes = '"'

#не создавая новый лист - слишком просто: я тогда создам переменные из каждого элемента my_list
information = f'в {quotes}{my_list[1]:0>2}{quotes} часов {quotes}{my_list[3]}{quotes} минут температура воздуха была {quotes}{plus}{cut_list[1]:0>2}{quotes} градусов'
print(information)

#3. * (вместо задачи 2) Решить задачу 2 не создавая новый список (как говорят, in place).
# Эта задача намного серьёзнее, чем может сначала показаться.
# todo решить задачу
# my_list = ['в ', '5', ' часов ', '17', ' минут ', 'температура ', 'воздуха ', 'была ', '+5', ' градусов']
# # print(my_list.index('+5'))
# cut_list = my_list[8]
# cut_list = my_list[8].split('+', 1)
# # print(cut_list)
# plus = '+'
# quotes = '"'
# plus5 = plus + cut_list[1]
# # print(plus5)
# quotes = '"'
#
# #
# information = f'в {quotes}{my_list[1]:0>2}{quotes} часов {quotes}{my_list[3]}{quotes} минут температура воздуха была {quotes}{plus}{cut_list[1]:0>2}{quotes} градусов'
# print(information)

#4. Дан список, содержащий искажённые данные с должностями и именами сотрудников:
#['инженер-конструктор Игорь', 'главный бухгалтер МАРИНА', 'токарь высшего разряда нИКОЛАй', 'директор аэлита']
# Известно, что имя сотрудника всегда в конце строки. Сформировать и вывести на экран фразы вида: 'Привет, Игорь!'
# Подумать, как получить имена сотрудников из элементов списка, как привести их к корректному виду.
# Можно ли при этом не создавать новый список?

# 5. Создать список, содержащий цены на товары (10–20 товаров), например:
# [57.8, 46.51, 97, ...]
# Вывести на экран эти цены через запятую в одну строку, цена должна отображаться в виде <r> руб <kk> коп (например «5 руб 04 коп»).
# Подумать, как из цены получить рубли и копейки, как добавить нули, если, например, получилось 7 копеек или 0 копеек
# (должно быть 07 коп или 00 коп).
# Вывести цены, отсортированные по возрастанию, новый список не создавать
# (доказать, что объект списка после сортировки остался тот же).
# Создать новый список, содержащий те же цены, но отсортированные по убыванию.
# Вывести цены пяти самых дорогих товаров. Сможете ли вывести цены этих товаров по возрастанию, написав минимум кода?

#todo split '5' and '+' done
#todo add zero to 5 and 5 to get 05
#todo add '+' to the second 05 => +05
#todo add " before and after numbers



#тупое обособление кавычками
# my_list.insert(1, '"')
# my_list.insert(3, '"')
# my_list.insert(5, '"')
# my_list.insert(7, '"')
# my_list.insert(12, '"')
# my_list.insert(14, '"')

# не менее тупо, но с привязкой к индексу элемента
# my_list.insert(my_list.index('+5'), '"')
# my_list.insert(my_list.index('+5') + 1, '"')
# my_list.insert(my_list.index('5'), '"')
# my_list.insert(my_list.index('5') + 1, '"')
# my_list.insert(my_list.index('17'), '"')
# my_list.insert(my_list.index('17') + 1, '"')
# print(my_list)

# print(''.join(my_list))



